//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace User.ChatService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ISEL.ADEETC.SD", ConfigurationName="ChatService.IReceiver")]
    public interface IReceiver {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ISEL.ADEETC.SD/IReceiver/ReceiveMessage", ReplyAction="http://ISEL.ADEETC.SD/IReceiver/ReceiveMessageResponse")]
        void ReceiveMessage(Interfaces.ChatMessage msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ISEL.ADEETC.SD/IReceiver/ReceiveMessage", ReplyAction="http://ISEL.ADEETC.SD/IReceiver/ReceiveMessageResponse")]
        System.Threading.Tasks.Task ReceiveMessageAsync(Interfaces.ChatMessage msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReceiverChannel : User.ChatService.IReceiver, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReceiverClient : System.ServiceModel.ClientBase<User.ChatService.IReceiver>, User.ChatService.IReceiver {
        
        public ReceiverClient() {
        }
        
        public ReceiverClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReceiverClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiverClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiverClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ReceiveMessage(Interfaces.ChatMessage msg) {
            base.Channel.ReceiveMessage(msg);
        }
        
        public System.Threading.Tasks.Task ReceiveMessageAsync(Interfaces.ChatMessage msg) {
            return base.Channel.ReceiveMessageAsync(msg);
        }
    }
}
